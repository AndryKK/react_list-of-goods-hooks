{"version":3,"sources":["GoodList.tsx","App.tsx","index.tsx"],"names":["GoodsList","actualOrder","map","good","goodsFromServer","App","useState","initialOrder","isStarted","setIsStarted","setActualOrder","className","type","onClick","reverse","sort","a","b","length","ReactDOM","render","document","getElementById"],"mappings":"iOAMaA,EAA6B,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YAC3C,OACE,6BACGA,EAAYC,KAAI,SAAAC,GAAI,OACnB,6BACGA,GADMA,SCNXC,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UA6EaC,EA1EO,WACpB,MAAuBC,mBAAS,GAAD,OAAKF,IAA7BG,EAAP,oBACA,EAAkCD,oBAAS,GAA3C,mBAAOE,EAAP,KAAkBC,EAAlB,KACA,EAAsCH,mBAAS,GAAD,OAAKF,IAAnD,mBAAOH,EAAP,KAAoBS,EAApB,KAsBA,OACE,sBAAKC,UAAU,MAAf,UACE,uCACEH,EACA,gCACE,cAAC,EAAD,CAAWP,YAAaA,IACxB,wBACEW,KAAK,SACLD,UAAU,SACVE,QArBU,WAClBH,EAAe,YAAIT,GAAaa,YAiB1B,qBAOA,wBACEF,KAAK,SACLD,UAAU,SACVE,QAhCiB,WACzBH,EAAe,YAAIT,GAAac,SA4B1B,iCAOA,wBACEH,KAAK,SACLD,UAAU,SACVE,QA/BI,WACZH,EAAe,YAAIH,KA2Bb,mBAOA,wBACEK,KAAK,SACLD,UAAU,SACVE,QAlCS,WACjBH,EAAe,YAAIT,GAAac,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,OAASD,EAAEC,YA8BtD,+BAUA,wBACEN,KAAK,SACLD,UAAU,SACVE,QA5DI,WACZJ,GAAa,IAwDP,uBC5EVU,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.e82bab45.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  actualOrder: string[]\n};\n\nexport const GoodsList: React.FC<Props> = ({ actualOrder }) => {\n  return (\n    <ul>\n      {actualOrder.map(good => (\n        <li key={good}>\n          {good}\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { GoodsList } from './GoodList';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst App: React.FC = () => {\n  const [initialOrder] = useState([...goodsFromServer]);\n  const [isStarted, setIsStarted] = useState(false);\n  const [actualOrder, setActualOrder] = useState([...goodsFromServer]);\n\n  const start = () => {\n    setIsStarted(true);\n  };\n\n  const sortAlphabetically = () => {\n    setActualOrder([...actualOrder].sort());\n  };\n\n  const reverseItem = () => {\n    setActualOrder([...actualOrder].reverse());\n  };\n\n  const reset = () => {\n    setActualOrder([...initialOrder]);\n  };\n\n  const lengthSort = () => {\n    setActualOrder([...actualOrder].sort((a, b) => a.length - b.length));\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Goods</h1>\n      {(isStarted) ? (\n        <div>\n          <GoodsList actualOrder={actualOrder} />\n          <button\n            type=\"button\"\n            className=\"button\"\n            onClick={reverseItem}\n          >\n            Reverse\n          </button>\n          <button\n            type=\"button\"\n            className=\"button\"\n            onClick={sortAlphabetically}\n          >\n            Sort alphabetically\n          </button>\n          <button\n            type=\"button\"\n            className=\"button\"\n            onClick={reset}\n          >\n            Reset\n          </button>\n          <button\n            type=\"button\"\n            className=\"button\"\n            onClick={lengthSort}\n          >\n            Sort by length\n          </button>\n        </div>\n      )\n        : (\n          <button\n            type=\"button\"\n            className=\"button\"\n            onClick={start}\n          >\n            Start\n          </button>\n        )}\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}